@model Card

@functions {
    string SvgUrl()
    {
        var clan = Model.Clan.ToString().ToLower();
        return "/svg/clan/" + clan + ".svg";
    }
}

<div class="card border-dark popover-card">
    <div class="card-body clan-@Model.Clan">
        <div class="d-flex row no-gutters">
            <div class="col">
                <h4 class="card-title">
                    @if(Model.IsUnique){<span class="icon icon-unique small"></span>}
                    <slot>
                        @Model.Name
                    </slot>
                </h4>
                <h6 class="card-subtitle mb-2 card-attributes">
                    @Model.Clan @Model.CardType. 
                    <span class="card-traits">@string.Join(". ", @Model.Traits)</span>
                </h6>
            </div>
            <div class="col-auto">
                <img src="@SvgUrl()" style="max-height: 7ex;" alt="@Model.Clan"/>
            </div>
        </div>
        <p>
            @if(Model is ICostCard costCard)
             {
                @if (costCard.Cost == null)
                 {
                     <span><span class="strike-through">Cost</span>.</span>
                 }
                 else
                 {
                     <span>Cost: @costCard.Cost.</span>
                 }
             }

            @switch (Model)
            {
                case CharacterCard character:
                {
                    if (character.Military == null)
                    {
                        <span><span class="strike-through">Military</span>.</span>
                    }
                    else
                    {
                        <span>Military: @(character.Military).</span>
                    }

                    if (character.Political == null)
                    {
                        <span><span class="strike-through">Political</span>.</span>
                    }
                    else
                    {
                        <span>Political: @(character.Political).</span>
                    }
                    break;
                }

                case AttachmentCard attachment:
                    <span>Military: @(attachment.MilitaryBonus ?? "-")</span>
                    <span>Political: @(attachment.PoliticalBonus ?? "-")</span>
                    break;
                case ProvinceCard province:
                    break;
                case HoldingCard holding:
                    break;
                case StrongholdCard stronghold:
                    break;
                case EventCard _:
                    break;
            }
        </p>
    </div>
</div>