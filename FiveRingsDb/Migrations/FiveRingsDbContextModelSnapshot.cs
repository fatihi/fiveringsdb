// <auto-generated />
using System;
using FiveRingsDb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FiveRingsDb.Migrations
{
    [DbContext(typeof(FiveRingsDbContext))]
    partial class FiveRingsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FiveRingsDb.Models.Card", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Clan")
                        .IsRequired();

                    b.Property<int>("DeckLimit");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<bool>("IsRestricted");

                    b.Property<bool>("IsUnique");

                    b.Property<string>("Name");

                    b.Property<string>("NameCanonical");

                    b.Property<string>("RoleRestriction");

                    b.Property<string>("Side")
                        .IsRequired();

                    b.Property<string>("Text");

                    b.Property<string>("TextCanonical");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Cards");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Card");
                });

            modelBuilder.Entity("FiveRingsDb.Models.Keyword", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("Id");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("FiveRingsDb.Models.PrintedCard", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardId");

                    b.Property<string>("Illustrator");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Pack")
                        .IsRequired();

                    b.Property<string>("Position");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("Id");

                    b.ToTable("PrintedCards");
                });

            modelBuilder.Entity("FiveRingsDb.Models.Trait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TraitEnum")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Traits");
                });

            modelBuilder.Entity("FiveRingsDb.Models.TraitInKeywordException", b =>
                {
                    b.Property<string>("KeywordId");

                    b.Property<int>("TraitId");

                    b.HasKey("KeywordId", "TraitId");

                    b.HasIndex("TraitId");

                    b.ToTable("TraitInKeywordException");
                });

            modelBuilder.Entity("FiveRingsDb.Models.TraitInKeywordRestriction", b =>
                {
                    b.Property<string>("KeywordId");

                    b.Property<int>("TraitId");

                    b.HasKey("KeywordId", "TraitId");

                    b.HasIndex("TraitId");

                    b.ToTable("TraitInKeywordRestriction");
                });

            modelBuilder.Entity("FiveRingsDb.Models.TraitOnCard", b =>
                {
                    b.Property<string>("CardId");

                    b.Property<int>("TraitId");

                    b.HasKey("CardId", "TraitId");

                    b.HasIndex("TraitId");

                    b.ToTable("TraitOnCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.AttachmentCard", b =>
                {
                    b.HasBaseType("FiveRingsDb.Models.Card");

                    b.Property<int>("Cost")
                        .HasColumnName("AttachmentCost");

                    b.Property<int?>("InfluenceCost")
                        .HasColumnName("AttachmentInfluenceCost");

                    b.Property<string>("MilitaryBonus");

                    b.Property<string>("PoliticalBonus");

                    b.ToTable("AttachmentCard");

                    b.HasDiscriminator().HasValue("AttachmentCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.CharacterCard", b =>
                {
                    b.HasBaseType("FiveRingsDb.Models.Card");

                    b.Property<int>("Cost")
                        .HasColumnName("CharacterCost");

                    b.Property<int>("Glory");

                    b.Property<int?>("InfluenceCost")
                        .HasColumnName("CharacterInfluenceCost");

                    b.Property<string>("Military");

                    b.Property<string>("Political");

                    b.ToTable("CharacterCard");

                    b.HasDiscriminator().HasValue("CharacterCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.EventCard", b =>
                {
                    b.HasBaseType("FiveRingsDb.Models.Card");

                    b.Property<int>("Cost")
                        .HasColumnName("EventCost");

                    b.Property<int?>("InfluenceCost")
                        .HasColumnName("EventInfluenceCost");

                    b.ToTable("EventCard");

                    b.HasDiscriminator().HasValue("EventCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.HoldingCard", b =>
                {
                    b.HasBaseType("FiveRingsDb.Models.Card");

                    b.Property<string>("StrengthBonus")
                        .HasColumnName("HoldingStrengthBonus");

                    b.ToTable("HoldingCard");

                    b.HasDiscriminator().HasValue("HoldingCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.ProvinceCard", b =>
                {
                    b.HasBaseType("FiveRingsDb.Models.Card");

                    b.Property<string>("Element")
                        .IsRequired();

                    b.Property<string>("Strength");

                    b.ToTable("ProvinceCard");

                    b.HasDiscriminator().HasValue("ProvinceCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.RoleCard", b =>
                {
                    b.HasBaseType("FiveRingsDb.Models.Card");


                    b.ToTable("RoleCard");

                    b.HasDiscriminator().HasValue("RoleCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.StrongholdCard", b =>
                {
                    b.HasBaseType("FiveRingsDb.Models.Card");

                    b.Property<int>("Fate");

                    b.Property<int>("Honor");

                    b.Property<int>("InfluencePool");

                    b.Property<string>("StrengthBonus")
                        .HasColumnName("StrongholdStrengthBonus");

                    b.ToTable("StrongholdCard");

                    b.HasDiscriminator().HasValue("StrongholdCard");
                });

            modelBuilder.Entity("FiveRingsDb.Models.Keyword", b =>
                {
                    b.HasOne("FiveRingsDb.Models.Card")
                        .WithMany("Keywords")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("FiveRingsDb.Models.PrintedCard", b =>
                {
                    b.HasOne("FiveRingsDb.Models.Card")
                        .WithMany("PackCards")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("FiveRingsDb.Models.TraitInKeywordException", b =>
                {
                    b.HasOne("FiveRingsDb.Models.Keyword", "Keyword")
                        .WithMany("TraitInKeywordExceptions")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiveRingsDb.Models.Trait", "Trait")
                        .WithMany("TraitsInKeywordExceptions")
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiveRingsDb.Models.TraitInKeywordRestriction", b =>
                {
                    b.HasOne("FiveRingsDb.Models.Keyword", "Keyword")
                        .WithMany("TraitInKeywordRestrictions")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiveRingsDb.Models.Trait", "Trait")
                        .WithMany("TraitsInKeywordRestrictions")
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FiveRingsDb.Models.TraitOnCard", b =>
                {
                    b.HasOne("FiveRingsDb.Models.Card", "Card")
                        .WithMany("TraitsOnCards")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FiveRingsDb.Models.Trait", "Trait")
                        .WithMany("TraitsOnCards")
                        .HasForeignKey("TraitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
